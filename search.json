[{"path":"https://docs.ropensci.org/nomisr/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (https:contributor-covenant.org), version 1.0.0, available https://contributor-covenant.org/version/1/0/0/","code":""},{"path":"https://docs.ropensci.org/nomisr/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to nomisr","title":"Contributing to nomisr","text":"Thank contributions! Following guidelines help streamline process contributing make sure ’re page. ask read guide follow best abilities, welcome contributions , regardless level experience. participating project, agree abide code conduct.","code":""},{"path":"https://docs.ropensci.org/nomisr/CONTRIBUTING.html","id":"types-of-contributions","dir":"","previous_headings":"","what":"Types of contributions","title":"Contributing to nomisr","text":"Don’t feel must computer whiz make meaningful contributions. Feel free : Identify areas future development (open Issue) Identify issues/bugs (open Issue) Write tutorials/vignettes (open Pull Request contribute ones , make elsewhere send us link) Add functionality (open Pull Request) Fix bugs (open Pull Request)","code":""},{"path":"https://docs.ropensci.org/nomisr/CONTRIBUTING.html","id":"new-to-github","dir":"","previous_headings":"","what":"New to GitHub?","title":"Contributing to nomisr","text":"Getting ready make first contribution? couple tutorials may wish check : Tutorial first-timers contribute (-depth lessons) GitHub setup GitHub pull requests.)","code":""},{"path":"https://docs.ropensci.org/nomisr/CONTRIBUTING.html","id":"how-to-contribute-code","dir":"","previous_headings":"","what":"How to contribute code","title":"Contributing to nomisr","text":"Fork repository Clone repository GitHub computer e.g,. git clone https://github.com/ropensci/nomisr.git git remote add upstream https://github.com/ropensci/nomisr.git making changes make sure pull changes upstream git pull upstream changes beyond minor typos, add item NEWS.md describing changes add DESCRIPTION file contributor Push GitHub account Submit pull request home base (likely master branch, check make sure) ropensci/nomisr","code":""},{"path":"https://docs.ropensci.org/nomisr/CONTRIBUTING.html","id":"code-formatting","dir":"","previous_headings":"","what":"Code formatting","title":"Contributing to nomisr","text":"general follow convention https://r-pkgs..co.nz/r.html#style (snake_case functions argument names, etc.) conflict, default style nomisr Use explicit package imports (.e. package_name::package_function) avoid @import possible","code":""},{"path":"https://docs.ropensci.org/nomisr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2018 Evan Odell Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://docs.ropensci.org/nomisr/articles/introduction.html","id":"introduction-to-the-nomis-api","dir":"Articles","previous_headings":"","what":"Introduction to the Nomis API","title":"Introduction to nomisr","text":"nomisr accessing Nomis data R. Nomis API free access without registration, contains --date official statistics, including data Census, Labour Force Survey, DWP benefit statistics economic demographic data. Nomis maintained behalf Office National Statistics University Durham. lot data available Nomis, limits amount data can retrieved within certain period time, although published. details, see full API documentation Nomis. Nomis data based around administrative statistical geographies, particular geography specified downloading data. nomisr designed around pipeline three key functions: nomis_data_info(), nomis_get_metadata() nomis_get_data(). nomis_overview(), nomis_content_type() nomis_search() functions can assist .","code":""},{"path":"https://docs.ropensci.org/nomisr/articles/introduction.html","id":"querying-data-availability","dir":"Articles","previous_headings":"Introduction to the Nomis API","what":"Querying data availability","title":"Introduction to nomisr","text":"nomis_data_info() function focused structure coverage available datasets. Use nomis_data_info() function without parameters get tibble metadata available datasets: nomis_data_info() can also used query metadata specific dataset, using ID. example uses “LC4408EW - Tenure number persons per bedroom household household type” dataset 2011 census, ID “NM_893_1”. tibble metadata datasets specific dataset returned, three columns, annotations.annotation, components.attribute components.dimension, list-columns data frames. annotations.annotation contains metadata dataset, including units current status. components.attribute contains detailed status metadata. components.dimension contains grouping summary variables available dataset, vary different datasets. example shows access data stored list columns returned Nomis API. case requests metadata single dataset, three columns lists length 1. requesting dataset information nomis_data_info(), row list length 1. list contains data.frame, varrying dimensions depending column dataset. can unnest individual list-columns display data row data rest tibble. Due differing lengths list-columns returned nomis_data_info(), one list-column can unnested time.","code":"x <- nomis_data_info() head(x) library(nomisr) y <- nomis_data_info(\"NM_893_1\")  tibble::glimpse(y) ## Rows: 1 ## Columns: 12 ## $ agencyid                             <chr> \"NOMIS\" ## $ id                                   <chr> \"NM_893_1\" ## $ uri                                  <chr> \"Nm-893d1\" ## $ version                              <dbl> 1 ## $ annotations.annotation               <list> [<data.frame[14 x 2]>] ## $ components.attribute                 <list> [<data.frame[7 x 4]>] ## $ components.dimension                 <list> [<data.frame[6 x 3]>] ## $ components.primarymeasure.conceptref <chr> \"OBS_VALUE\" ## $ components.timedimension.codelist    <chr> \"CL_893_1_TIME\" ## $ components.timedimension.conceptref  <chr> \"TIME\" ## $ name.value                           <chr> \"LC4408EW - Tenure by number of p… ## $ name.lang                            <chr> \"en\" library(dplyr, warn.conflicts = F)  y$annotations.annotation %>% class()  y$annotations.annotation %>% length()  y$annotations.annotation[[1]] %>% class()  y %>% pull(annotations.annotation) %>% class()  y %>% pull(annotations.annotation) %>% .[[1]] %>% class()  y %>% pull(annotations.annotation) %>% purrr::pluck() %>% class()  ## Unnesting list columns y %>% tidyr::unnest(annotations.annotation) %>% glimpse()"},{"path":"https://docs.ropensci.org/nomisr/articles/introduction.html","id":"searching-for-data","dir":"Articles","previous_headings":"Introduction to the Nomis API > Querying data availability","what":"Searching for data","title":"Introduction to nomisr","text":"nomisr also contains nomis_search() function search datasets particular topics. nomis_search() can used search one dataset names, descriptions, keywords, content type units. using multiple parameters, nomis_search() return information datasets match one parameters. Character vectors strings can used searches, likewise nomis_search() return information datasets match one queries. * used wildcard symbol. nomis_search() returns metadata format nomis_data_info(), including using list-columns. nomis_content_type() function can assist identifying content type IDs nomis_search().","code":"a <- nomis_search(name = '*jobseekers*', keywords = 'Claimants')  tibble::glimpse(a)  a %>% tidyr::unnest(components.attribute) %>% glimpse()  b <- nomis_search(keywords = c('Claimants', '*Year*'))  tibble::glimpse(b)  b %>% tidyr::unnest(components.attribute) %>% glimpse()"},{"path":"https://docs.ropensci.org/nomisr/articles/introduction.html","id":"other-ways-to-access-metadata","dir":"Articles","previous_headings":"Introduction to the Nomis API > Querying data availability","what":"Other ways to access metadata","title":"Introduction to nomisr","text":"nomis_overview() returns tibble generalised overview given dataset. nomis_overview() select parameter can used select particular elements overview return.","code":"q <- nomis_overview(\"NM_1650_1\")  q %>% tidyr::unnest(name) %>% glimpse() s <- nomis_overview(\"NM_1650_1\", select = c(\"units\", \"keywords\"))   s %>% tidyr::unnest(name) %>% glimpse()"},{"path":"https://docs.ropensci.org/nomisr/articles/introduction.html","id":"querying-data-variables","dir":"Articles","previous_headings":"Introduction to the Nomis API","what":"Querying data variables","title":"Introduction to nomisr","text":"Vast amounts data available Nomis avoid overwhelming API, good practice query concepts available, using nomis_get_metadata(). metadata functions can return concept metadata, nomis_get_metadata() provides greater flexibility specificity returned metadata nomis_overview() nomis_data_info(). example queries metadata available API “LC4408EW - Tenure bynumber persons per bedroom household household type” dataset.","code":""},{"path":"https://docs.ropensci.org/nomisr/articles/introduction.html","id":"getting-concepts","dir":"Articles","previous_headings":"Introduction to the Nomis API > Querying data variables","what":"Getting concepts","title":"Introduction to nomisr","text":"provided just dataset ID, nomis_get_metadata() return concepts available given dataset.","code":"a <- nomis_get_metadata(id = \"NM_893_1\")"},{"path":"https://docs.ropensci.org/nomisr/articles/introduction.html","id":"concept-values","dir":"Articles","previous_headings":"Introduction to the Nomis API > Querying data variables","what":"Concept Values","title":"Introduction to nomisr","text":"provided concept name returns available values concept. However, cases, espescially geography concept, multiple options available, Nomis labels types. case nomis_get_metadata() returns values lowest indexed type available. can now pass generic “type” string type parameter nomis_get_metadata(), returns available geography types dataset “NM_893_1”. Passing specific type type parameter, case “TYPE460” post-2010 parliamentary constituencies, returns tibble geographic codes specific constituencies, can used filter queries. vast majority (98% February 2018) Nomis datasets include geographic variable.","code":"b <- nomis_get_metadata(id = \"NM_893_1\", concept = \"GEOGRAPHY\") c <- nomis_get_metadata(id = \"NM_893_1\", concept = \"geography\", type = \"type\") d <- nomis_get_metadata(id = \"NM_893_1\",                         concept = \"geography\", type = \"TYPE460\")"},{"path":"https://docs.ropensci.org/nomisr/articles/introduction.html","id":"downloading-data","dir":"Articles","previous_headings":"Introduction to the Nomis API","what":"Downloading data","title":"Introduction to nomisr","text":"Using information , can now query latest data bedroom occupancy per household type different NHS clinical commissioning groups. can also query bedroom occupancy per household type Manchester, Gorton Manchester, Withington parliamentary constituencies. nomisr also allows time series queries. example shows retrieve percentage workforce claiming Jobseekers Allowance January 2015 January 2020, inclusive, region UK, divided male female claimants, accompanying graph.","code":"z <- nomis_get_data(id = \"NM_893_1\", time = \"latest\", geography = \"TYPE266\") x <- nomis_get_data(id = \"NM_893_1\", time = \"latest\",                     geography = c(\"1929380119\", \"1929380120\")) library(ggplot2) library(dplyr) library(nomisr)  jsa <- nomis_get_data(id = \"NM_1_1\", time = \"2018-01-2021-10\",                       geography = \"TYPE480\", measures=20201,                       sex=c(5,6), item = 1, tidy = TRUE)  jsa <- jsa %>%    mutate(date = as.Date(paste0(date, \"-01\")),          obs_value = obs_value/100)  theme_set(theme_bw())  p_jsa <- ggplot(jsa, aes(x = date, y = obs_value, colour = sex_name)) +    geom_line(size = 1.15) +   scale_colour_viridis_d(end = 0.75, begin = 0.1, name = \"Gender\") +    scale_x_date(breaks = \"6 months\", date_labels = \"%b %Y\") +    scale_y_continuous(labels = scales::percent) +    theme(axis.text.x = element_text(angle = 30, hjust = 1, size = 8),         legend.position = \"bottom\") +    labs(x = \"Date\", y= \"JSA Claimants (Percentage of Workforce)\") +    facet_wrap(~geography_name, scales = \"free_y\")  p_jsa"},{"path":"https://docs.ropensci.org/nomisr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Evan Odell. Author, maintainer. Paul Egeler. Reviewer, contributor. Christophe Dervieux. Reviewer. Nina Robery. Contributor.            Work Health Indicators nomisr vignette","code":""},{"path":"https://docs.ropensci.org/nomisr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Odell E (2018). “nomisr: Access Nomis UK Labour Market Data R.” Journal Open Source Software, 3(27), 859. doi:10.21105/joss.00859.","code":"@Article{,   title = {{nomisr}: Access Nomis UK Labour Market Data With R},   volume = {3},   doi = {10.21105/joss.00859},   number = {27},   journal = {The Journal of Open Source Software},   year = {2018},   month = {July},   pages = {859},   author = {Evan Odell}, }"},{"path":"https://docs.ropensci.org/nomisr/index.html","id":"nomisr","dir":"","previous_headings":"","what":"Access Nomis UK Labour Market Data","title":"Access Nomis UK Labour Market Data","text":"nomisr accessing UK official statistics Nomis database R. Nomis contains data Census, Labour Force Survey, DWP benefit statistics economic demographic data, maintained behalf Office National Statistics University Durham. nomisr package provides functions find data available, variables query options different datasets function downloading data. nomisr returns data tibble format. data available nomisr based around statistical geographies, handful exceptions. package demographers, economists, geographers, public health researchers researchers interested geographic factors. package aims aid reproducibility, reduce need manually download area profiles, allow easy linking different datasets covering geographic area.","code":""},{"path":"https://docs.ropensci.org/nomisr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Access Nomis UK Labour Market Data","text":"nomisr available CRAN: can install development version nomisr github :","code":"install.packages(\"nomisr\") # install.packages(\"devtools\") devtools::install_github(\"ropensci/nomisr\")"},{"path":"https://docs.ropensci.org/nomisr/index.html","id":"using-nomisr","dir":"","previous_headings":"","what":"Using nomisr","title":"Access Nomis UK Labour Market Data","text":"nomisr contains functions search datasets, identify query options different datasets retrieve data queries, done tibbles, take advantage tibble manages list-columns. use metadata queries, rather simply downloading available data, useful avoid overwhelming rate limits API. nomisr vignette introduction details available functions basic demonstrations use. example demonstrates workflow retrieve latest data Jobseeker’s Allowance rates proportions, national level, male claimants workforce. lot data available Nomis, limits amount data can retrieved within certain period time, although published. details, see full API documentation Nomis. Full package documentation available docs.evanodell.com/nomisr.","code":"library(nomisr)  jobseekers_search <- nomis_search(name = \"*Jobseeker*\")    tibble::glimpse(jobseekers_search) #> Rows: 17 #> Columns: 14 #> $ agencyid                             <chr> \"NOMIS\", \"NOMIS\", \"NOMIS\", \"NOMIS… #> $ id                                   <chr> \"NM_1_1\", \"NM_4_1\", \"NM_8_1\", \"NM… #> $ uri                                  <chr> \"Nm-1d1\", \"Nm-4d1\", \"Nm-8d1\", \"Nm… #> $ version                              <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, … #> $ annotations.annotation               <list> [<data.frame[10 x 2]>], [<data.f… #> $ components.attribute                 <list> [<data.frame[7 x 4]>], [<data.fr… #> $ components.dimension                 <list> [<data.frame[5 x 3]>], [<data.fr… #> $ components.primarymeasure.conceptref <chr> \"OBS_VALUE\", \"OBS_VALUE\", \"OBS_VA… #> $ components.timedimension.codelist    <chr> \"CL_1_1_TIME\", \"CL_4_1_TIME\", \"CL… #> $ components.timedimension.conceptref  <chr> \"TIME\", \"TIME\", \"TIME\", \"TIME\", \"… #> $ description.value                    <chr> \"Records the number of people cla… #> $ description.lang                     <chr> \"en\", \"en\", NA, \"en\", \"en\", \"en\",… #> $ name.value                           <chr> \"Jobseeker's Allowance with rates… #> $ name.lang                            <chr> \"en\", \"en\", \"en\", \"en\", \"en\", \"en…   jobseekers_measures <- nomis_get_metadata(\"NM_1_1\", \"measures\")    tibble::glimpse(jobseekers_measures) #> Rows: 4 #> Columns: 3 #> $ id             <chr> \"20100\", \"20201\", \"20202\", \"20203\" #> $ label.en       <chr> \"claimants\", \"workforce\", \"active\", \"residence\" #> $ description.en <chr> \"claimants\", \"workforce\", \"active\", \"residence\"    jobseekers_geography <- nomis_get_metadata(\"NM_1_1\", \"geography\", \"TYPE\")    tail(jobseekers_geography) #> # A tibble: 6 × 3 #>   id      label.en                                           description.en      #>   <chr>   <chr>                                              <chr>               #> 1 TYPE490 government office regions tec / lec based          government office … #> 2 TYPE491 government office regions (former inc. Merseyside) government office … #> 3 TYPE492 standard statistical regions                       standard statistic… #> 4 TYPE496 pre-1996 local authority districts                 pre-1996 local aut… #> 5 TYPE498 pre-1996 counties / scottish regions               pre-1996 counties … #> 6 TYPE499 countries                                          countries    jobseekers_sex <- nomis_get_metadata(\"NM_1_1\", \"sex\", \"TYPE\")    tibble::glimpse(jobseekers_sex) #> Rows: 3 #> Columns: 4 #> $ id             <chr> \"5\", \"6\", \"7\" #> $ parentCode     <chr> \"7\", \"7\", NA #> $ label.en       <chr> \"Male\", \"Female\", \"Total\" #> $ description.en <chr> \"Male\", \"Female\", \"Total\"    z <- nomis_get_data(id = \"NM_1_1\", time = \"latest\", geography = \"TYPE499\",                      measures=c(20100, 20201), sex=5) #> No encoding supplied: defaulting to UTF-8.    tibble::glimpse(z) #> Rows: 70 #> Columns: 34 #> $ DATE                <chr> \"2021-12\", \"2021-12\", \"2021-12\", \"2021-12\", \"2021-… #> $ DATE_NAME           <chr> \"December 2021\", \"December 2021\", \"December 2021\",… #> $ DATE_CODE           <chr> \"2021-12\", \"2021-12\", \"2021-12\", \"2021-12\", \"2021-… #> $ DATE_TYPE           <chr> \"date\", \"date\", \"date\", \"date\", \"date\", \"date\", \"d… #> $ DATE_TYPECODE       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,… #> $ DATE_SORTORDER      <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,… #> $ GEOGRAPHY           <dbl> 2092957697, 2092957697, 2092957697, 2092957697, 20… #> $ GEOGRAPHY_NAME      <chr> \"United Kingdom\", \"United Kingdom\", \"United Kingdo… #> $ GEOGRAPHY_CODE      <chr> \"K02000001\", \"K02000001\", \"K02000001\", \"K02000001\"… #> $ GEOGRAPHY_TYPE      <chr> \"countries\", \"countries\", \"countries\", \"countries\"… #> $ GEOGRAPHY_TYPECODE  <dbl> 499, 499, 499, 499, 499, 499, 499, 499, 499, 499, … #> $ GEOGRAPHY_SORTORDER <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1,… #> $ SEX                 <dbl> 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,… #> $ SEX_NAME            <chr> \"Male\", \"Male\", \"Male\", \"Male\", \"Male\", \"Male\", \"M… #> $ SEX_CODE            <dbl> 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,… #> $ SEX_TYPE            <chr> \"sex\", \"sex\", \"sex\", \"sex\", \"sex\", \"sex\", \"sex\", \"… #> $ SEX_TYPECODE        <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,… #> $ SEX_SORTORDER       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,… #> $ ITEM                <dbl> 1, 1, 2, 2, 3, 3, 4, 4, 9, 9, 1, 1, 2, 2, 3, 3, 4,… #> $ ITEM_NAME           <chr> \"Total claimants\", \"Total claimants\", \"Students on… #> $ ITEM_CODE           <dbl> 1, 1, 2, 2, 3, 3, 4, 4, 9, 9, 1, 1, 2, 2, 3, 3, 4,… #> $ ITEM_TYPE           <chr> \"item\", \"item\", \"item\", \"item\", \"item\", \"item\", \"i… #> $ ITEM_TYPECODE       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,… #> $ ITEM_SORTORDER      <dbl> 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 0, 0, 1, 1, 2, 2, 3,… #> $ MEASURES            <dbl> 20100, 20201, 20100, 20201, 20100, 20201, 20100, 2… #> $ MEASURES_NAME       <chr> \"Persons claiming JSA\", \"Workplace-based estimates… #> $ OBS_VALUE           <dbl> 73931.0, 0.3, NA, NA, NA, NA, NA, NA, NA, NA, 6791… #> $ OBS_STATUS          <chr> \"A\", \"A\", \"Q\", \"Q\", \"Q\", \"Q\", \"Q\", \"Q\", \"Q\", \"Q\", … #> $ OBS_STATUS_NAME     <chr> \"Normal Value\", \"Normal Value\", \"These figures are… #> $ OBS_CONF            <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, F… #> $ OBS_CONF_NAME       <chr> \"Free (free for publication)\", \"Free (free for pub… #> $ URN                 <chr> \"Nm-1d1d32348e0d2092957697d5d1d20100\", \"Nm-1d1d323… #> $ RECORD_OFFSET       <dbl> 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, … #> $ RECORD_COUNT        <dbl> 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70…"},{"path":"https://docs.ropensci.org/nomisr/index.html","id":"meta","dir":"","previous_headings":"","what":"Meta","title":"Access Nomis UK Labour Market Data","text":"Bug reports, suggestions, code contributions welcome. Please see CONTRIBUTING.md details. Please note project released Contributor Code Conduct. participating project agree abide terms. Please note project affiliated Office National Statistics University Durham (run Nomis behalf Office National Statistics). Please use reference citing nomisr, use citation(package = 'nomisr'). Odell, (2018). nomisr: Access ‘Nomis’ UK Labour Market Data. Journal Open Source Software, 3(27), 859, doi: 10.21105/joss.00859. BibTeX entry LaTeX users License: MIT","code":"@Article{odell2018,     title = {{nomisr}: Access Nomis UK Labour Market Data With R},     volume = {3},     doi = {10.21105/joss.00859},     number = {27},     journal = {The Journal of Open Source Software},     year = {2018},     month = {July},     pages = {859},     author = {Evan Odell},   }"},{"path":"https://docs.ropensci.org/nomisr/reference/nomis_api_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Nomis API Key — nomis_api_key","title":"Nomis API Key — nomis_api_key","text":"Assign reassign API key Nomis.","code":""},{"path":"https://docs.ropensci.org/nomisr/reference/nomis_api_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nomis API Key — nomis_api_key","text":"","code":"nomis_api_key(check_env = FALSE)"},{"path":"https://docs.ropensci.org/nomisr/reference/nomis_api_key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nomis API Key — nomis_api_key","text":"check_env TRUE, check environment variable NOMIS_API_KEY first asking user input.","code":""},{"path":"https://docs.ropensci.org/nomisr/reference/nomis_api_key.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Nomis API Key — nomis_api_key","text":"Nomis API optional key. Using key means 100,000 rows can returned per call, can speed larger data requests reduce chances rate limited requests timing . default, nomisr look environment variable NOMIS_API_KEY package loaded. found, API key stored session option nomisr.API.key. like reload API key like manually enter one , function may used. can sign API key .","code":""},{"path":"https://docs.ropensci.org/nomisr/reference/nomis_codelist.html","id":null,"dir":"Reference","previous_headings":"","what":"Nomis codelists — nomis_codelist","title":"Nomis codelists — nomis_codelist","text":"Nomis uses internal coding query concepts. nomis_codelist returns codes given concept tibble, given dataset ID concept name. Note codelists, particularly geography, can large.","code":""},{"path":"https://docs.ropensci.org/nomisr/reference/nomis_codelist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nomis codelists — nomis_codelist","text":"","code":"nomis_codelist(id, concept, search = NULL)"},{"path":"https://docs.ropensci.org/nomisr/reference/nomis_codelist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nomis codelists — nomis_codelist","text":"id string ID particular dataset. Must specified. concept string variable concept return options . left empty, returns variables dataset specified id. Codes case sensitive must specified. search Search codes contain given string. wildcard character * can added beginning /end search string. Search strings case sensitive. Defaults NULL. Note search function powerful datasets.","code":""},{"path":"https://docs.ropensci.org/nomisr/reference/nomis_codelist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Nomis codelists — nomis_codelist","text":"tibble codes used query specific concepts.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/nomisr/reference/nomis_codelist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Nomis codelists — nomis_codelist","text":"","code":"# \\donttest{ x <- nomis_codelist(\"NM_1_1\", \"item\")   # Searching for codes ending with \"london\" y <- nomis_codelist(\"NM_1_1\", \"geography\", search = \"*london\")   z <- nomis_codelist(\"NM_161_1\", \"cause_of_death\") # }"},{"path":"https://docs.ropensci.org/nomisr/reference/nomis_content_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Nomis dataset content types — nomis_content_type","title":"Nomis dataset content types — nomis_content_type","text":"Nomis content type metadata included annotation tags, form contenttype/<contenttype> annotationtitle column annotations.annotation list-column returned nomis_data_info(). example, content types returned dataset \"NM_1658_1\", using nomis_data_info(\"NM_1658_1\"), \"geoglevel\", \"2001census\" \"sources\".","code":""},{"path":"https://docs.ropensci.org/nomisr/reference/nomis_content_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nomis dataset content types — nomis_content_type","text":"","code":"nomis_content_type(content_type, id = NULL)"},{"path":"https://docs.ropensci.org/nomisr/reference/nomis_content_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nomis dataset content types — nomis_content_type","text":"content_type string content type return metadata . id string optional content_type id.","code":""},{"path":"https://docs.ropensci.org/nomisr/reference/nomis_content_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Nomis dataset content types — nomis_content_type","text":"tibble metadata given content type.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/nomisr/reference/nomis_content_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Nomis dataset content types — nomis_content_type","text":"","code":"# \\donttest{ a <- nomis_content_type(\"sources\")  tibble::glimpse(a) #> Rows: 17 #> Columns: 6 #> $ description <chr> \"A count of home Civil Service employees. It excludes the … #> $ id          <chr> \"acses\", \"aps\", \"ashe\", \"bres\", \"census\", \"cc\", \"dwp\", \"ho… #> $ name        <chr> \"Annual Civil Service Employment Survey\", \"Annual Populati… #> $ type        <chr> \"DataSource\", \"DataSource\", \"DataSource\", \"DataSource\", \"D… #> $ item        <list> <NULL>, <NULL>, <NULL>, <NULL>, [<data.frame[7 x 5]>], <N… #> $ status      <chr> NA, NA, NA, NA, NA, NA, \"archived\", NA, \"archived\", NA, NA…  b <- nomis_content_type(\"sources\", id = \"census\")  tibble::glimpse(b) #> Rows: 7 #> Columns: 9 #> $ description      <chr> \"Census data from the 1921, 1961, 1981, 1991, 2001, 2… #> $ id               <chr> \"census\", \"census\", \"census\", \"census\", \"census\", \"ce… #> $ item.description <chr> \"The 2021 Census was taken on 21 March 2021.\", \"The 2… #> $ item.id          <chr> \"census_2021\", \"census_2011\", \"census_2001\", \"census_… #> $ item.item        <list> [<data.frame[14 x 5]>], [<data.frame[13 x 5]>], [<da… #> $ item.name        <chr> \"2021 Census\", \"2011 Census\", \"2001 Census\", \"1991 Ce… #> $ item.type        <chr> \"DataSourceSubGroup\", \"DataSourceSubGroup\", \"DataSour… #> $ name             <chr> \"Census of Population\", \"Census of Population\", \"Cens… #> $ type             <chr> \"DataSource\", \"DataSource\", \"DataSource\", \"DataSource… # }"},{"path":"https://docs.ropensci.org/nomisr/reference/nomis_data_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Nomis data structures — nomis_data_info","title":"Nomis data structures — nomis_data_info","text":"Retrieve metadata structure available variables available data sets information available specific dataset based ID.","code":""},{"path":"https://docs.ropensci.org/nomisr/reference/nomis_data_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nomis data structures — nomis_data_info","text":"","code":"nomis_data_info(id, tidy = FALSE)"},{"path":"https://docs.ropensci.org/nomisr/reference/nomis_data_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nomis data structures — nomis_data_info","text":"id Dataset ID. empty, returns data available datasets. ID dataset, returns metadata particular dataset. tidy TRUE, converts tibble names snakecase.","code":""},{"path":"https://docs.ropensci.org/nomisr/reference/nomis_data_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Nomis data structures — nomis_data_info","text":"tibble available datasets metadata.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/nomisr/reference/nomis_data_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Nomis data structures — nomis_data_info","text":"","code":"# \\donttest{  # Get info on all datasets x <- nomis_data_info()  tibble::glimpse(x) #> Rows: 1,611 #> Columns: 14 #> $ agencyid                             <chr> \"NOMIS\", \"NOMIS\", \"NOMIS\", \"NOMIS… #> $ id                                   <chr> \"NM_1_1\", \"NM_2_1\", \"NM_4_1\", \"NM… #> $ uri                                  <chr> \"Nm-1d1\", \"Nm-2d1\", \"Nm-4d1\", \"Nm… #> $ version                              <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, … #> $ annotations.annotation               <list> [<data.frame[10 x 2]>], [<data.f… #> $ components.attribute                 <list> [<data.frame[7 x 4]>], [<data.fr… #> $ components.dimension                 <list> [<data.frame[5 x 3]>], [<data.fr… #> $ components.primarymeasure.conceptref <chr> \"OBS_VALUE\", \"OBS_VALUE\", \"OBS_VA… #> $ components.timedimension.codelist    <chr> \"CL_1_1_TIME\", \"CL_2_1_TIME\", \"CL… #> $ components.timedimension.conceptref  <chr> \"TIME\", \"TIME\", \"TIME\", \"TIME\", \"… #> $ description.value                    <chr> \"Records the number of people cla… #> $ description.lang                     <chr> \"en\", \"en\", \"en\", \"en\", \"en\", \"en… #> $ name.value                           <chr> \"Jobseeker's Allowance with rates… #> $ name.lang                            <chr> \"en\", \"en\", \"en\", \"en\", \"en\", \"en…  # Get info on a particular dataset y <- nomis_data_info(\"NM_1658_1\")  tibble::glimpse(y) #> Rows: 1 #> Columns: 12 #> $ agencyid                             <chr> \"NOMIS\" #> $ id                                   <chr> \"NM_1658_1\" #> $ uri                                  <chr> \"Nm-1658d1\" #> $ version                              <dbl> 1 #> $ annotations.annotation               <list> [<data.frame[14 x 2]>] #> $ components.attribute                 <list> [<data.frame[7 x 4]>] #> $ components.dimension                 <list> [<data.frame[4 x 3]>] #> $ components.primarymeasure.conceptref <chr> \"OBS_VALUE\" #> $ components.timedimension.codelist    <chr> \"CL_1658_1_TIME\" #> $ components.timedimension.conceptref  <chr> \"TIME\" #> $ name.value                           <chr> \"UV035 - Distance travelled to wo… #> $ name.lang                            <chr> \"en\" # }"},{"path":"https://docs.ropensci.org/nomisr/reference/nomis_get_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Nomis datasets — nomis_get_data","title":"Retrieve Nomis datasets — nomis_get_data","text":"find code options given dataset, use nomis_get_metadata() specific codes, nomis_codelist() code values. can slow process querying significant amounts data. Guest users limited 25,000 rows per query, although nomisr identifies queries return 25,000 rows, sending individual queries combining results queries single tibble. interactive sessions, nomisr warn guest users requesting 350,000 rows data, registered users requesting 1,500,000 rows. Note difference time date parameters. time date parameters used time. , function retrieve data based date parameter. given one query, time return data available queries, inclusively, date return data exact queries specified. time = c(\"first\", \"latest\") return data, date = c(\"first\", \"latest\") return earliest latest data published.","code":""},{"path":"https://docs.ropensci.org/nomisr/reference/nomis_get_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Nomis datasets — nomis_get_data","text":"","code":"nomis_get_data(   id,   time = NULL,   date = NULL,   geography = NULL,   sex = NULL,   measures = NULL,   additional_queries = NULL,   exclude_missing = FALSE,   select = NULL,   tidy = FALSE,   tidy_style = \"snake_case\",   query_id = NULL,   ... )"},{"path":"https://docs.ropensci.org/nomisr/reference/nomis_get_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Nomis datasets — nomis_get_data","text":"id string containing ID dataset retrieve, \"nm_***_*\" format. id parameter case sensitive. time Parameter selecting dates date ranges. Accepts either single date value, two date values returns data two date values, two styles values can used query time. first one two \"latest\" (returns latest available data), \"previous\" (date prior \"latest\"), \"prevyear\" (date one year prior \"latest\") \"first\" (oldest available data dataset). second style use specific date multiple dates, style time variable codelist, can found using nomis_get_metadata() function. Values time date parameters used time. , function retrieve data based date parameter. Defaults NULL. date Parameter selecting specific dates. Accepts one date values. given multiple values, data given dates returned, limit number data values. example, date=c(\"latest, latestMINUS3, latestMINUS6\") return latest data, data three months prior latest data six months prior latest data. two styles values can used query time. first one \"latest\" (returns latest available data), \"previous\" (date prior \"latest\"), \"prevyear\" (date one year prior \"latest\") \"first\" (oldest available data dataset). second style use specific date multiple dates, style time variable codelist, can found using nomis_get_metadata() function. Values time date parameters used time. , function retrieve data based date parameter. Defaults NULL. geography code geographic area return data . NULL, returns data available geographic areas, subject parameters. Defaults NULL. rare instance geographic variable exist, NULL, function return error. sex code sexes/genders include dataset. Accepts string number, vector strings numbers. nomisr automatically voids queries sex available code requested dataset. Defaults NULL returns available sex/gender data. two different codings used sex, depending dataset. datasets using \"SEX\", 7 return results males females, 6 females 5 males. Defaults NULL, equivalent c(5,6,7) datasets sex option. datasets using \"C_SEX\", 0 return results males females, 1 males 2 females. datasets use \"GENDER\" values \"SEX\", works sex = <code> gender = <code> dot parameter. measures code statistical measure(s) include data. Accepts single string number, list strings numbers. NULL, returns data available statistical measures subject parameters. Defaults NULL. additional_queries additional queries pass API. See https://www.nomisweb.co.uk/api/v01/help instructions query structure. Defaults NULL. Deprecated package versions greater 0.2.0 eventually removed future version. exclude_missing TRUE, excludes missing values. Defaults FALSE. select character vector one variables include returned data, excluding others. select case sensitive. tidy Logical parameter. TRUE, converts variable names snake_case, another style specified tidy_style parameter. Defaults FALSE. default variable name style API SCREAMING_SNAKE_CASE. tidy_style style convert variable names , tidy = TRUE. Accepts one \"snake_case\", \"camelCase\" \"period.case\", case options accepted snakecase::to_any_case(). Defaults \"snake_case\". query_id Results can labelled belonging certain query made API. query_id accepts value string, included every row tibble returned nomis_get_data column labelled \"QUERY_ID\" default SCREAMING_SNAKE_CASE used API. Defaults NULL. ... Use pass parameters API. Useful passing concepts available default parameters. accepts concepts identified nomis_get_metadata() concept values identified nomis_codelist(). Parameters can quoted unquoted. parameter name value. example, CAUSE_OF_DEATH = 10300 querying dataset \"NM_161_1\". Parameters case sensitive. Note R using partial matching function variables, passing parameter opening characters one -named parameters can cause error unless value named parameter specified, including NULL. See example :","code":""},{"path":"https://docs.ropensci.org/nomisr/reference/nomis_get_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Nomis datasets — nomis_get_data","text":"tibble containing selected dataset. default, tibble columns except \"OBS_VALUE\" column parsed characters.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/nomisr/reference/nomis_get_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Nomis datasets — nomis_get_data","text":"","code":"# \\donttest{  # Return data on Jobseekers Allowance for each country in the UK jobseekers_country <- nomis_get_data(   id = \"NM_1_1\", time = \"latest\",   geography = \"TYPE499\",   measures = c(20100, 20201), sex = 5 )  # Return data on Jobseekers Allowance for Wigan jobseekers_wigan <- nomis_get_data(   id = \"NM_1_1\", time = \"latest\",   geography = \"1879048226\",   measures = c(20100, 20201), sex = \"5\" )  # annual population survey - regional - employment by occupation emp_by_occupation <- nomis_get_data(   id = \"NM_168_1\", time = \"latest\",   geography = \"2013265925\", sex = \"0\",   select = c(     \"geography_code\",     \"C_OCCPUK11H_0_NAME\", \"obs_vAlUE\"   ) )  # Deaths in 2016 and 2015 by three specified causes, # identified with nomis_get_metadata() death <- nomis_get_data(\"NM_161_1\",   date = c(\"2016\", \"2015\"),   geography = \"TYPE480\",   cause_of_death = c(10300, 102088, 270) )  # All causes of death in London in 2016 london_death <- nomis_get_data(\"NM_161_1\",   date = c(\"2016\"),   geography = \"2013265927\", sex = 1, age = 0 ) #> Retrieving additional pages 1 of 2 #> Retrieving additional pages 2 of 2 # } if (FALSE) { # Results in an error because `measure` is mistaken for `measures` mort_data1 <- nomis_get_data(   id = \"NM_161_1\", date = \"2016\",   geography = \"TYPE464\", sex = 0, cause_of_death = \"10381\",   age = 0, measure = 6 )  # Does not error because `measures` is specified mort_data2 <- nomis_get_data(   id = \"NM_161_1\", date = \"2016\",   geography = \"TYPE464\", sex = 0, measures = NULL,   cause_of_death = \"10381\", age = 0, measure = 6 ) }"},{"path":"https://docs.ropensci.org/nomisr/reference/nomis_get_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Nomis metadata concepts and types — nomis_get_metadata","title":"Nomis metadata concepts and types — nomis_get_metadata","text":"Retrieve concept code options Nomis datasets, concept code options given dataset, options given concept variable particular dataset. Specifying concept return options given variable particular dataset. looking detailed overview available metadata given dataset, see nomis_overview().","code":""},{"path":"https://docs.ropensci.org/nomisr/reference/nomis_get_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nomis metadata concepts and types — nomis_get_metadata","text":"","code":"nomis_get_metadata(   id,   concept = NULL,   type = NULL,   search = NULL,   additional_queries = NULL,   ...,   tidy = FALSE )"},{"path":"https://docs.ropensci.org/nomisr/reference/nomis_get_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nomis metadata concepts and types — nomis_get_metadata","text":"id ID particular dataset. Returns data specified. concept string variable concept return options . left empty, returns variables dataset specified id. Codes case sensitive. Defaults NULL. type string options particular code value, return types variables available given code. Defaults NULL. concept == NULL, type ignored. search string character vector strings search metadata. Defaults NULL. nomis_search(), wildcard character * can added beginning /end search string. additional_queries additional queries pass API. See https://www.nomisweb.co.uk/api/v01/help instructions query structure. Defaults NULL. Deprecated package versions greater 0.2.0 eventually removed. ... Use pass parameters API. tidy TRUE, converts tibble names snakecase.","code":""},{"path":"https://docs.ropensci.org/nomisr/reference/nomis_get_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Nomis metadata concepts and types — nomis_get_metadata","text":"tibble metadata options queries using nomis_get_data().","code":""},{"path":[]},{"path":"https://docs.ropensci.org/nomisr/reference/nomis_get_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Nomis metadata concepts and types — nomis_get_metadata","text":"","code":"# \\donttest{ a <- nomis_get_metadata(\"NM_1_1\")  print(a) #> # A tibble: 6 × 3 #>   codelist         conceptref isfrequencydimension #>   <chr>            <chr>      <chr>                #> 1 CL_1_1_GEOGRAPHY GEOGRAPHY  false                #> 2 CL_1_1_SEX       SEX        false                #> 3 CL_1_1_ITEM      ITEM       false                #> 4 CL_1_1_MEASURES  MEASURES   false                #> 5 CL_1_1_FREQ      FREQ       true                 #> 6 CL_1_1_TIME      TIME       false                 b <- nomis_get_metadata(\"NM_1_1\", \"geography\")  tibble::glimpse(b) #> Rows: 7 #> Columns: 4 #> $ id             <chr> \"2092957697\", \"2092957698\", \"2092957699\", \"2092957700\",… #> $ parentCode     <chr> NA, NA, NA, \"2092957700\", \"2092957701\", \"2092957702\", NA #> $ label.en       <chr> \"United Kingdom\", \"Great Britain\", \"England\", \"Wales\", … #> $ description.en <chr> \"United Kingdom\", \"Great Britain\", \"England\", \"Wales\", …  # returns all types of geography c <- nomis_get_metadata(\"NM_1_1\", \"geography\", \"TYPE\")  tibble::glimpse(c) #> Rows: 102 #> Columns: 3 #> $ id             <chr> \"TYPE1\", \"TYPE8\", \"TYPE18\", \"TYPE27\", \"TYPE33\", \"TYPE45… #> $ label.en       <chr> \"1991 frozen wards\", \"parliamentary constituencies 1983… #> $ description.en <chr> \"1991 frozen wards\", \"parliamentary constituencies 1983…  # returns geography types available within Wigan d <- nomis_get_metadata(\"NM_1_1\", \"geography\", \"1879048226\")  tibble::glimpse(d) #> Rows: 13 #> Columns: 4 #> $ id             <chr> \"1879048226\", \"1879048226TYPE236\", \"1879048226TYPE297\",… #> $ parentCode     <chr> \"2013265922\", NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N… #> $ label.en       <chr> \"Wigan\", \"2011 census frozen wards within Wigan\", \"2011… #> $ description.en <chr> \"Wigan\", \"2011 census frozen wards within Wigan\", \"2011…  e <- nomis_get_metadata(\"NM_1_1\", \"item\", geography = 1879048226, sex = 5)  print(e) #> # A tibble: 5 × 4 #>   id    parentCode label.en                 description.en           #>   <chr> <chr>      <chr>                    <chr>                    #> 1 1     NA         Total claimants          Total claimants          #> 2 2     1          Students on vacation     Students on vacation     #> 3 3     1          Temporarily stopped      Temporarily stopped      #> 4 4     1          Claimants under 18 years Claimants under 18 years #> 5 9     1          Married females          Married females           f <- nomis_get_metadata(\"NM_1_1\", \"item\", search = \"*married*\")  tibble::glimpse(f) #> Rows: 1 #> Columns: 4 #> $ id             <chr> \"9\" #> $ parentCode     <chr> \"1\" #> $ label.en       <chr> \"Married females\" #> $ description.en <chr> \"Married females\" # }"},{"path":"https://docs.ropensci.org/nomisr/reference/nomis_overview.html","id":null,"dir":"Reference","previous_headings":"","what":"Nomis dataset overview — nomis_overview","title":"Nomis dataset overview — nomis_overview","text":"Returns overview available metadata given dataset.","code":""},{"path":"https://docs.ropensci.org/nomisr/reference/nomis_overview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nomis dataset overview — nomis_overview","text":"","code":"nomis_overview(id, select = NULL)"},{"path":"https://docs.ropensci.org/nomisr/reference/nomis_overview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nomis dataset overview — nomis_overview","text":"id ID particular dataset. Returns data specified. select string character vector one overview parts select, excluding others. select case sensitive. options select described , taken Nomis API help page.","code":""},{"path":"https://docs.ropensci.org/nomisr/reference/nomis_overview.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Nomis dataset overview — nomis_overview","text":"tibble two columns, one character vector name metadata category, list column values category.","code":""},{"path":"https://docs.ropensci.org/nomisr/reference/nomis_overview.html","id":"overview-part-options","dir":"Reference","previous_headings":"","what":"Overview part options","title":"Nomis dataset overview — nomis_overview","text":"DatasetInfo General dataset information name, description, sub-description, mnemonic, restricted access status Coverage Shows geographic coverage main geography dimension dataset (e.g. United Kingdom, England Wales etc.) Keywords keywords allocated dataset Units units measure supported dataset ContentTypes classifications allocated dataset DateMetadata Information first release, last update next update Contact Details point contact dataset Analyses Show available analysis breakdowns dataset Dimensions Individual dimension information (e.g. sex, geography, date, etc.) Dimension-concept Allows specific dimension selected (e.g. dimension-geography allow information geography dimension). used \"Dimensions\" specified . Codes Full list selectable codes, excluding Geography, list Types instead. (Requires \"Dimensions\" selected ) Codes-concept Full list selectable codes specific dimension, excluding Geography, list Types instead. used \"Codes\" specified (Requires \"Dimensions\" equivalent selected ) DimensionMetadata available metadata attached dimensional level (Requires \"Dimensions\" equivalent selected ) Make Information whether user defined codes can created MAKE parameter querying data (Requires \"Dimensions\" equivalent selected ) DatasetMetadata Metadata attached dataset level","code":""},{"path":[]},{"path":"https://docs.ropensci.org/nomisr/reference/nomis_overview.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Nomis dataset overview — nomis_overview","text":"","code":"# \\donttest{ library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union  q <- nomis_overview(\"NM_1650_1\")  q %>%   tidyr::unnest(name) %>%   glimpse() #> Rows: 21 #> Columns: 2 #> $ name  <chr> \"analyses\", \"analysisname\", \"analysisnumber\", \"contact\", \"conten… #> $ value <list> [[<data.frame[3 x 3]>]], \"output data for a single date or rang…  s <- nomis_overview(\"NM_1650_1\", select = c(\"Units\", \"Keywords\"))  s %>%   tidyr::unnest(name) %>%   glimpse() #> Rows: 3 #> Columns: 2 #> $ name  <chr> \"id\", \"keywords\", \"units\" #> $ value <list> \"NM_1650_1\", \"Year last worked\", [[\"Persons\"]] # }"},{"path":"https://docs.ropensci.org/nomisr/reference/nomis_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Search Nomis datasets — nomis_search","title":"Search Nomis datasets — nomis_search","text":"function search datasets given topics. case multiple search parameters, returns metadata datasets matching  one parameters. wildcard character * can added beginning /end search string.","code":""},{"path":"https://docs.ropensci.org/nomisr/reference/nomis_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search Nomis datasets — nomis_search","text":"","code":"nomis_search(   name = NULL,   description = NULL,   keywords = NULL,   content_type = NULL,   units = NULL,   tidy = FALSE )"},{"path":"https://docs.ropensci.org/nomisr/reference/nomis_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search Nomis datasets — nomis_search","text":"name string character vector strings search available dataset names. Defaults NULL. description string character vector strings search available dataset descriptions. Note description looks complete matches, wildcards used start end string. Defaults NULL. keywords string character vector strings search available dataset keywords. Defaults NULL. content_type string character vector strings search available dataset content types. content_type can include optional ID content type. Defaults NULL. units string character vector strings search available dataset units. Defaults NULL. tidy TRUE, converts tibble names snakecase.","code":""},{"path":"https://docs.ropensci.org/nomisr/reference/nomis_search.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search Nomis datasets — nomis_search","text":"tibble details datasets matching search query.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/nomisr/reference/nomis_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search Nomis datasets — nomis_search","text":"","code":"# \\donttest{ x <- nomis_search(name = \"*seekers*\")  y <- nomis_search(keywords = \"Claimants\")  # Return metadata of all datasets with content_type \"sources\". a <- nomis_search(content_type = \"sources\")   # Return metadata of all datasets with content_type \"sources\" and # source ID \"acses\" b <- nomis_search(content_type = \"sources-acses\") # }"},{"path":"https://docs.ropensci.org/nomisr/reference/nomisr.html","id":null,"dir":"Reference","previous_headings":"","what":"nomisr: Access Nomis UK Labour Market Data with R — nomisr","title":"nomisr: Access Nomis UK Labour Market Data with R — nomisr","text":"Access UK official statistics Nomis database. Nomis includes data Census, Labour Force Survey, DWP benefit statistics economic demographic data Office National Statistics.","code":""},{"path":"https://docs.ropensci.org/nomisr/reference/nomisr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"nomisr: Access Nomis UK Labour Market Data with R — nomisr","text":"package provides functions find data available, metadata, including variables query options different datasets function downloading data. full API documentation optional registration API key available https://www.nomisweb.co.uk/api/v01/help.","code":""},{"path":"https://docs.ropensci.org/nomisr/news/index.html","id":"nomisr-047","dir":"Changelog","previous_headings":"","what":"nomisr 0.4.7","title":"nomisr 0.4.7","text":"CRAN release: 2022-06-11 Checks readr version avoid error reading CSV content (#31 thanks owenjonesuob AlexStead) Sets encoding UTF-8 csv files.","code":""},{"path":"https://docs.ropensci.org/nomisr/news/index.html","id":"nomisr-045","dir":"Changelog","previous_headings":"","what":"nomisr 0.4.5","title":"nomisr 0.4.5","text":"CRAN release: 2022-02-05 Better error message API returns empty data circumstances. Suppressed printing column types reading CSV files (#25, thanks jackobailey) Removed 2nd vignette due errors","code":""},{"path":"https://docs.ropensci.org/nomisr/news/index.html","id":"nomisr-044","dir":"Changelog","previous_headings":"","what":"nomisr 0.4.4","title":"nomisr 0.4.4","text":"CRAN release: 2021-01-23 replaced .tibble as_tibble Includes second vignette “Work Health Indicators nomisr”","code":""},{"path":"https://docs.ropensci.org/nomisr/news/index.html","id":"nomisr-043","dir":"Changelog","previous_headings":"","what":"nomisr 0.4.3","title":"nomisr 0.4.3","text":"CRAN release: 2020-03-02 Fix readme links","code":""},{"path":"https://docs.ropensci.org/nomisr/news/index.html","id":"nomisr-042","dir":"Changelog","previous_headings":"","what":"nomisr 0.4.2","title":"nomisr 0.4.2","text":"Error handling improvements using non-existent parameters, clarifies error messages data available given query. Removes redundant call API (#19), thanks @Chrisjb New tidy parameter nomis_get_metadata() convert names snake_case. Now using snakecase package implement name cleaning, providing broader range naming styles. nomis_get_metadata() now makes existence time concept explicit tibble returned nomis_get_metadata({id}).","code":""},{"path":"https://docs.ropensci.org/nomisr/news/index.html","id":"nomisr-041","dir":"Changelog","previous_headings":"","what":"nomisr 0.4.1","title":"nomisr 0.4.1","text":"CRAN release: 2019-01-09 Adding query_id parameter nomis_get_data() Changed documentation use roxygen markdown","code":""},{"path":"https://docs.ropensci.org/nomisr/news/index.html","id":"bug-fixes-0-4-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"nomisr 0.4.1","text":"Fixed bug select parameter nomis_get_data() didn’t work “OBS_VALUE” one variables. (@JimShady, #12)","code":""},{"path":"https://docs.ropensci.org/nomisr/news/index.html","id":"nomisr-040","dir":"Changelog","previous_headings":"","what":"nomisr 0.4.0","title":"nomisr 0.4.0","text":"CRAN release: 2018-08-03 Version bump CRAN Citation now refers JOSS paper minor changes internal code easier maintenance Documentation updates clarify difference time date parameters nomis_get_data()","code":""},{"path":[]},{"path":"https://docs.ropensci.org/nomisr/news/index.html","id":"new-features-and-function-changes-0-3-2","dir":"Changelog","previous_headings":"","what":"New features and function changes","title":"nomisr 0.3.2 (non-CRAN release)","text":"tidy parameter nomis_get_data() now defaults FALSE order preserve existing workflows.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/nomisr/news/index.html","id":"new-features-and-function-changes-0-3-1","dir":"Changelog","previous_headings":"","what":"New features and function changes","title":"nomisr 0.3.1 (non-CRAN release)","text":"nomis_get_data() now includes tidy tidy_style parameters. nomis_get_data() now defaults converting variable names “snake_case”. tidy_style also accepts “camelCase” “period.case” name style options.","code":""},{"path":"https://docs.ropensci.org/nomisr/news/index.html","id":"bug-fixes-0-3-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"nomisr 0.3.1 (non-CRAN release)","text":"Dot queries nomis_get_data() work case-insensitive measurements persistently.","code":""},{"path":"https://docs.ropensci.org/nomisr/news/index.html","id":"other-updates-0-3-1","dir":"Changelog","previous_headings":"","what":"Other updates","title":"nomisr 0.3.1 (non-CRAN release)","text":"Clarification need specified NULL unused named parameters nomis_get_data() using similarly named parameters ....","code":""},{"path":"https://docs.ropensci.org/nomisr/news/index.html","id":"nomisr-030","dir":"Changelog","previous_headings":"","what":"nomisr 0.3.0","title":"nomisr 0.3.0","text":"CRAN release: 2018-06-18","code":""},{"path":"https://docs.ropensci.org/nomisr/news/index.html","id":"new-features-and-function-changes-0-3-0","dir":"Changelog","previous_headings":"","what":"New features and function changes","title":"nomisr 0.3.0","text":"New nomis_codelist() function, returns internal coding different concepts used NOMIS API tibble, given dataset ID concept name. additional_queries parameter nomis_get_data() nomis_get_metadata() deprecated eventually removed. Please use ... parameter queries including concepts available default parameters. sex parameter nomis_get_data() also work datasets use “gender” instead “sex”.","code":""},{"path":"https://docs.ropensci.org/nomisr/news/index.html","id":"internal-changes-and-bug-fixes-0-3-0","dir":"Changelog","previous_headings":"","what":"Internal changes and bug fixes","title":"nomisr 0.3.0","text":"Uses rsdmx parse metadata, fixing #7.","code":""},{"path":"https://docs.ropensci.org/nomisr/news/index.html","id":"nomisr-020","dir":"Changelog","previous_headings":"","what":"nomisr 0.2.0","title":"nomisr 0.2.0","text":"CRAN release: 2018-04-19 Improved API key handling (#5) Increased test coverage Adding rOpenSci reviewers DESCRIPTION file.","code":""},{"path":"https://docs.ropensci.org/nomisr/news/index.html","id":"nomisr-010","dir":"Changelog","previous_headings":"","what":"nomisr 0.1.0","title":"nomisr 0.1.0","text":"Moved rOpenSci github repository Added API key functionality, required API useful large requests. interactive sessions, users asked want continue calling 15 pages data time.","code":""},{"path":"https://docs.ropensci.org/nomisr/news/index.html","id":"nomisr-002","dir":"Changelog","previous_headings":"","what":"nomisr 0.0.2","title":"nomisr 0.0.2","text":"Introduction additional parameters nomis_get_data() nomis_codes() functions, improvements documentation.","code":""},{"path":"https://docs.ropensci.org/nomisr/news/index.html","id":"nomisr-001","dir":"Changelog","previous_headings":"","what":"nomisr 0.0.1","title":"nomisr 0.0.1","text":"1st release. Rudimentary functions retrieving information available datasets downloading datasets nomis, limited parameters.","code":""}]
